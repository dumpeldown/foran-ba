7.4.2	Threats against O-CLOUD
Virtualization and containerization technologies in O-RAN introduce the following relevant threats:
7.4.2.1	Generic Threats

Threat ID	T-GEN-01
Threat title	Software flaw attack
Threat description	Code of host OS, Hypervisor/Container Engine and VNF/CNF can include flaws that an attacker can exploit if they are present.
As O-RAN software components relies on opensource software, opensource libraries, 3rd party components. Vulnerability in any of these software components likely to allow attacker to exploit O-CLOUD environment. This could lead attacker to carry out to malicious activities, such as:
•	Compromise of the underlying VM/Container
•	Exploit host access via Escape to Host
•	Take advantage of weak identity and access management policies to attempt to elevate privileges
•	Execute adversary-controlled code
•	Enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host
Threat type	Spoofing, Tampering, Information disclosure, Elevation of Privilege
Impact type	Authenticity, Integrity, Confidentiality, Authorization
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

Threat ID	T-GEN-02
Threat title	Malicious access to exposed services using valid accounts
Threat description	Access to valid accounts to use the O-Cloud services is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the network. 
Adversaries may obtain and abuse credentials of existing accounts as a means of gaining initial access, persistence, privilege escalation, or defense evasion. Compromised credentials may be used to bypass access controls placed on various resources on O-Cloud.
Compromised credentials may also grant an adversary increased privilege to specific O-Cloud services or access to restricted areas of the O-Cloud network. 
Access may be also gained through an exposed service that doesn’t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.
Threat type	Spoofing, Tampering, Information disclosure, Elevation of Privilege
Impact type	Authenticity, Integrity, Confidentiality, Authorization
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

Threat ID	T-GEN-03
Threat title	Untrust binding between the different O-Cloud layers
Threat description	One major challenge in virtualized architectures and especially in O-Cloud is to prove that a particular VM/Container runs on top of a specific Hypervisor/Container Engine. More specifically, it is necessary to assure that a trusted VM/Container is executed on a particular trusted Hypervisor/Container Engine, whereas the Hypervisor/Container Engine's trust state relies on an attestation that considers the entire corresponding hard and software stack. More precisely, this includes all hardware chips, firmware, OS and Hypervisor/Container Engine components that are relevant for the Hypervisor/Container Engine's trust state determination.
If it is not possible to establish a correlation between VM/Container and Hypervisor/Container Engine, an attacker is able to make use of a trusted VM/Container that runs on top of an untrusted Hypervisor/Container Engine and it would be impossible to detect any interference made by the malicious Hypervisor/Container Engine, e.g. intercepting communication, replacing strong or using weak cryptographic keys, etc. Similarly, trustworthiness in the service-layer might only be established if there is a mechanism to determine that only trusted VNFs/CNFs, w.r.t trusted VM/Container's, are running on specific trusted Hypervisors/Container Engines that are part of the service-provisioning-chain.
Threat type	Tampering, Information disclosure
Impact type	Integrity, Confidentiality
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

Threat ID	T-GEN-04
Threat title	Lack of Authentication & Authorization in interfaces between O-Cloud components
Threat description	O-Cloud deploys CNF applications as containers in a cluster of physical nodes which may be spanned across geographical locations. Owing to the Service Based Architecture of CNFs, this introduces several service endpoints communicating across each other over the network (container to container, container to cloud infrastructure component) and it is fairly difficult to distinguish between a service terminating an external interface and a service exposing only an internal interface.
Multi-tenant deployments and deployments in public cloud also require the CNF applications to run alongside unknown entities. In such deployment scenarios, CNF service endpoints with no authentication/weak authentication expose risk of attack that can impact the availability of service and the CNF.
Lack of proper authentication in interfaces exposed by CNF services, introduces threats of lateral movement where a compromised container/rogue container  
•	can compromise the availability of internal service by bringing down the internal service and perform lateral movement of attack by exploiting the availability of other such services
•	can compromise the confidentiality of the internal service by extracting critical application data
Threat type	Information disclosure, Denial of Service
Impact type	Availability, Confidentiality
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

Threat ID	T-GEN-05
Threat title	Unsecured credentials and keys
Threat description	Adversaries may search compromised O-RAN NFs, VL, orchestration layer or hardware to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on the O-cloud platform, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys) [i.22].
Bash History: Adversaries may search the bash command history on compromised systems for insecurely stored credentials. 
Credentials in registry: Adversaries may search the Registry on compromised systems for insecurely stored credentials. 
Private Keys: Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures; Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.
Adversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.
Threat type	Tampering, Information disclosure, and Elevation of privilege
Impact type	Integrity, Confidentiality, Authorization
Affected Asset	Private keys and credentials

Threat ID	T-GEN-06
Threat title	Sensitive application data cache exploitation
Threat description	Most of the applications use data that is sensitive in nature which needs to be secured. And it is common for these applications to cache such sensitive data, after retrieving the data from a secure storage. This caching occurs in various forms: within application memory, in persistent file systems, or in ephemeral file systems (For example, non-persistent container file system).
For a VNF, the application can cache the sensitive data in its memory which is non-persistent (erased when the application ceases to exist) or in the persistent virtual machine file system.
For a CNF, the application can store the sensitive data in its memory which is non-persistent (erased when the application/microservice ceases to exist) or in the non-persistent container file system, or in the persistent host file system, provided the application has the necessary privileges to access host file system.
The sensitive data components that are cached by applications could be of different types which are used as authentication keys, session keys, passwords, tokens, etc.
The storage of sensitive data in the application cache is used to improve performance of the applications and keeping the sensitive information readily available to the applications for faster initialization, re-initialization or recovery. 
An example of faster recovery/re-initialization is a scenario where a TLS client establishes a TLS session with a server and stores the client certificate and corresponding private key in the application cache. If the TLS session is terminated unexpectedly (For example, due to network error conditions), the TLS client uses the cached client certificates and private key for recovering / re-establishing the TLS session, instead of retrieving the information from a more secure, but slower, storage solution.
While leveraging application cache is indispensable for significant performance gains, it also presents a notable security risk [i.28], [i.29]. The sensitive data stored in application cache would be a primary target from attackers/threat actors [i.30], who can exploit this information to penetrate deeper into O-RAN network functions.
To counter this threat, a “Defense in depth” approach is essential. This approach encompasses multiple security layers designed to mitigate risks associated with application caches, focusing on strong encryption, strict access management and anomaly detection to protect sensitive data effectively.
Threat type	Tampering, Information disclosure
Impact type	Integrity, Confidentiality
Affected Asset	Certificates, private keys, credentials and other application specific sensitive data

7.4.2.2	Threats concerning VMs/Containers

Threat ID	T-VM-C-01
Threat title	Abuse of a privileged VM/Container
Threat description	It’s possible to run VMs/Containers with unintended configurations. Such misconfigurations can help the adversaries to compromise even strongest of VM/Container isolation measures.
Such misconfigurations scenarios include:
•	A VMs/Containers can be configured to have more privileges than what is actually required (e.g. settings that give it unnecessary, and perhaps unplanned, privileges). For example, an attacker with access to such a container, can use it to gain higher privileges on host, perform un-authorized operations and get to anything that the host, or any of the containers running on that host, can reach.
•	A VMs/Containers have unintended read/write access to a directory on host filesystem. This could allow an attacker to perform unauthorized modifications to the contents, create symbolic links to any directories or files not directly exposed by the hostPath, install SSH keys, read secrets mounted to the host, and take other malicious actions.
Threat type	Spoofing, Tampering, Information disclosure, Denial of Service and Elevation of privilege
Impact type	Authenticity, Integrity, Confidentiality, Availability and Authorization
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

Threat ID	T-VM-C-02
Threat title	VM/Container escape attack
Threat description	VNF/CNF deployed on the same physical machine as tenants share the same host kernel and host OS resources. Lack of strong isolation between the VMs/Containers and the host allows for a potential risk of a rogue VM/Container escaping the VM/Container confinement and impacting other co-hosted VMs/Containers. In others, an attacker may deploy a new malicious VM/Container configured without network rules, user limitations, etc. to bypass existing defenses within O-Cloud infrastructure.
Attacker deploys malicious VM/Container to escapes the host (Hypervisor/Container Engine/Host OS) and reaches the server’s hardware, then the malicious VM/Container can gain root access to the whole server where it resides. This gives the malicious VM/Container full control on all the VMs/Containers hosted on the same hacked server. This could allow an attacker to undermine the confidentiality, integrity and/or availability of VNFs/CNFs resources.
Containers can be deployed by various means, such as via Docker's create and start APIs or via a web application such as the Kubernetes dashboard or Kubeflow. Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.
When a malicious VM/Container escapes isolation, it can gain full control over the underlying host and cause any of the below serious threats:
•	Attacker would gain the ability to mount attacks on the host or compromise the host functionalities
•	Compromise the confidentiality & integrity of co-hosted VMs/Containers and tenants
•	Launch DDOS attacks on co-hosted VMs/Containers and host services thereby degrading their performance 
•	Introduce new vulnerabilities in host to be used for future attacks
•	Lack of network segmentation could potentially expose other VMs/Containers in the environment to attack. An example of this could be reconnaissance, exploitation and subsequent lateral movement to another host within the cluster.
Threat type	Spoofing, Tampering, Information disclosure, Denial of Service and Elevation of privilege
Impact type	Authenticity, Integrity, Confidentiality, Availability and Authorization
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

 
Figure 7 6 : Illustration of the VM/Container escape attack

Threat ID	T-VM-C-03
Threat title	VM/Container data theft
Threat description	The VNF/CNF remotely stores sensitive data (e.g. passwords, private keys, subscription data, logs) on the logical volume that the IMS/DMS allocates to the VNF/CNF. An attacker can retrieve/manipulate these data if they have been stored in an insecure way (e.g. clear text, unsalted hashes) or a malware is installed on the logical volume that the VIM allocates to the VNF/CNF.
Container example: Adversaries may attempt to discover containers and other resources that are available locally within O-Cloud. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster. These resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs. In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution.
Threat type	Tampering, Information disclosure
Impact type	Integrity, Confidentiality
Affected Asset	Images, environment’s configuration, and other information such as the status of a cluster

Threat ID	T-VM-C-04
Threat title	VM/Container migration attacks
Threat description	The attacks that exploit VM/Container migration can be divided into two subcategories based on the target plane:
1.	Control Plane Attacks: These attacks target the module that is responsible for handling the migration process on a server which is called the migration module that is found in the host. By exploiting a bug in the migration module software, the attacker can hack the server and take full control over the migration module. This gives the attacker the ability to launch malicious activities including the following: 
a.	Migration Flooding: The attacker moves all the VMs/Containers that are hosted on the hacked server to a victim server that does not have enough resource capacity to host all the moved VMs/Containers. This causes a denial of service for the VNFs/CNFs running in the VMs/Containers of the victim server as there will not be enough resources to satisfy the demands of all the hosted VMs/Containers leading into VM/Container performance degradation and VM/Container crashes.
b.	False Resource Advertising: The hacked server claims that it has a large resource slack (a large amount of free resources). This attracts other servers to off-load some of their VMs/Containers to the hacked server so that the O-Cloud workload gets distributed over the O-Cloud servers. After moving VMs/Containers from other servers to the hacked server, the attacker can exploit other vulnerabilities to break into the offloaded VMs/Containers as now these VMs/Containers are placed on a server that is under the control of the attacker.
2.	Data Plane Attacks: These constitute the second type of VM/Container migration attacks and those attacks target the network links over which the VM/Container is moved from a server to another. Such data plane attacks include the MitM where an attacker sniffs the packets that are exchanged between the source and destination servers and reads the migrated memory pages. The attacker can monitor and/or modify the received packets while continuing to forward them to victim VM/Container resides so that the victim does not detect that any malicious activity is going on.
Threat type	Tampering, Information disclosure, Denial of Service
Impact type	Integrity, Confidentiality, Availability
Affected Asset	VNFs/CNFs (Near RT RIC, O-CU, O-DU)

 
Figure 7 7 : Illustration of the migration flooding attack

 
Figure 7 8 : Illustration of the false resource advertising attack

 
Figure 7 9 : Illustration of the migration MITM attack

Threat ID	T-VM-C-05
Threat title	Changing virtualization resource without authorization
Threat description	IMS/DMS which manage the Virtualization layer is responsible for assigning virtualized resource as requested.
There are several ways to cause a DoS attack for the VNFs/CNFs: 
•	If IMS/DMS are compromised or the O2 interface is not securely protected, an attacker who compromised the IMS/DMS or breached the O2 interface can change the virtualized resource used by a VNF/CNF by manipulating the allocation of virtualized resource. For example, when an instantiated VNF/CNF is running, adversaries having access to a compromised IMS/DMS or adversaries breaching the insecure O2 interface can misguide the Virtualization layer to reduce the resource of or delete a VM/Container on which a VNF/CNF is running. This can result in the reliability, availability or even illegal termination of a VNF/CNF and hence the denial of service.
•	Hardware resource configuration and state information (e.g. events) exchange is performed through O2 interface. If the IMS is compromised or the O2 interface is not securely protected, an attacker who compromised the IMS or breached the O2 interface can tamper the hardware configuration and state information so that the virtualized resource supported by the hardware layer becomes unreliable. For example, adversaries having access to a compromised IMS or adversaries breaching the insecure O2 interface can misguide the O-Cloud platform to detach a hardware accelerator from a VNF/CNF.
•	Adversaries having access to a compromised virtualization layer can change the virtualization resource used by the instantiated VNF/CNF without authorization, 
•	A malicious VM/Container deployed for one instance of a VNF/CNF on a host can illegally occupy the resources of the instantiated VNF/CNF deployed on the same host, resulting in resource limitation of the instantiated VNF/CNF

In this type of attacks, the extra allocation of resources for the malicious VM/Container comes at the expense of the other VMs/Containers that share the same server as the malicious VM/Container, where these victim VMs/Containers get allocated less share of resources than what they should actually obtain, which in turn degrades their performance.
Threat type	Denial of Service
Impact type	Availability
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

 
Figure 7 10 : Illustration of the Theft-of-Service/DoS Attack

Threat ID	T-VM-C-06
Threat title	Failed or incomplete VNF/CNF termination or releasing of resources
Threat description	A malicious VNF/CNF is instantiated in the O-Cloud infrastructure to access to data not erased from a terminated VNF/CNF or any VNF/CNF that has released resources. Data could include application data, cryptographic keys...
Abuse of resources allocation in the O-Cloud infrastructure to allocate to a malicious VNF/CNF the virtual resources released from a terminated VNF/CNF or from a VNF/CNF that has released resources after a move or a scaling process.
Inclusion of concealed software in the O-Cloud infrastructure to prevent the deletion/erasure of data and states of the VNF/CNF that has been terminated.
Threat type	Information disclosure
Impact type	Confidentiality
Affected Asset	Sensitive data (e.g. passwords, private keys, subscription data, logs), VNFs/CNFs (Near RT RIC, O-CU, O-DU) software and data

7.4.2.3	Threats concerning VM/Container images

Threat ID	T-IMG-01
Threat title	VM/Container images tampering
Threat description	An attacker can inject malicious code or tamper the information inside the unprotected image during on boarding. Then after the instantiation of the VNF/CNF, the tampered code can cause DoS, information stealing, frauds and so on. There are several attacks categories belonging to this threat. Such attacks include:
•	Build machine attacks: If an attacker can modify or influence the way a VM/Container image is built, they could insert malicious code that will subsequently get run in the production environment. 
•	Supply chain attacks: Once the VM/Container image is built, it gets stored in a registry, and it gets retrieved or “pulled” from the registry at the point where it’s going to be run. An attacker who can replace an image or modify an image between build and deployment could run arbitrary code on your deployment. 
Threat type	Tampering, Information disclosure
Impact type	Integrity, Confidentiality
Affected Asset	VM/Container images

Threat ID	T-IMG-02
Threat title	Insecure channels with images repository
Threat description	Images often contain sensitive components like an organization’s proprietary software, and embedded secrets and administrator credentials. If connections to registries are performed over insecure channels, man-in-the-middle attacks could intercept network traffic and therefore the contents integrity and confidentiality of images may be compromised. There is also an increased risk of man-in-the-middle attacks that could intercept network traffic intended for registries and steal developer or administrator credentials within that traffic. Thus, could be used to provide fraudulent or outdated images to orchestrators, etc.
Threat type	Tampering, Information disclosure
Impact type	Integrity, Confidentiality
Affected Asset	VMs/Containers images

Threat ID	T-IMG-03
Threat title	Secrets disclosure in VM/Container images
Threat description	There are scenarios which benefit from including configuration and secrets, such as passwords or credentials in VNFs/CNFs images. For e.g. VMs/Containers require to be able to connect to other VMs/Containers within the deployment as well as with external entities. All these connections need to be authenticated and secured. One way of achieving this is to provide the requisite secrets or keys to the VMs/Containers which allow them to authenticate, be authenticated, secure the communication channel and signature.  A common but in-secure means of providing secrets to the VMs/Containers is by packaging the secrets or the keys with the image itself. There is the risk that the same can be extracted, read or manipulated before the VM/Container is deployed and the secret used.
With a long supply chain, VM/Container images are vulnerable to outside scrutiny. With VM/Container images containing secrets or keys, this becomes a serious threat vector. Adversaries can extract them by obtaining a copy of the image and they can be potentially shared with third parties for illicit gain. 
•	Secrets embedded within a VM/Container image can be stolen. 
•	Secrets embedded within a VM/Container image can be modified 
Compromised private keys and algorithms used for image signing due to poor key protection/management/design could undermine the security of image signing process.
Threat type	Spoofing, Tampering, Information disclosure
Impact type	Authenticity, Integrity, Confidentiality
Affected Asset	VM/Container images

Threat ID	T-IMG-04
Threat title	Build image on VL
Threat description	Adversaries may build a VM/Container image directly on the VL to bypass defenses that monitor for the retrieval of malicious images from a registry. 
Container example: A remote build request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.
An adversary may take advantage of that build API to build a custom image on the host that includes malware downloaded from their C2 server, and they then may deploy container using that custom image. If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it’s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment.
Threat type	Spoofing, Tampering, Information disclosure, Denial of Service and Elevation of privilege
Impact type	Authenticity, Integrity, Confidentiality, Availability and Authorization
Affected Asset	VM/Container images

7.4.2.4	Threats concerning the virtualization layer (Host OS-Hypervisor/Container engine)

Threat ID	T-VL-01
Threat title	VM/Container hyperjacking attack
Threat description	VMs/Containers run on host machines, and it is needed to ensure that those hosts (Hypervisor/Container Engine/Host OS- are not running vulnerable code (for example, old versions of components with known vulnerabilities).  
Hyperjacking is an attack in which adversaries gain control over the host of a server or install a malicious Hypervisor/Container Engine/Host OS and exploit that to run malicious applications on the VM/Container that run on top of the host. This would enable the attacker to control all the VMs/Containers running on the host.
Hyperjacking involves installing a malicious, fake the Hypervisor/Container Engine/Host OS that can manage the entire server system. If the attacker gains access to the Hypervisor/Container Engine/Host OS, everything that is connected to that server can be manipulated. The Hypervisor/Container Engine/Host OS represents a single point of failure when it comes to the security and protection of sensitive information.
For a hyperjacking attack to succeed, an attacker would have to take control of the Hypervisor/Container Engine/Host OS by the following methods:
•	Injecting a rogue Hypervisor/Container Engine or Host OS beneath the original hypervisor or on top of an existing Hypervisor/Container Engine/Host OS
•	Directly obtaining control of the original Hypervisor/Container Engine or Host OS
•	Running a rogue hypervisor on top of an existing hypervisor
Threat type	Spoofing, Tampering, Information disclosure, Denial of Service and Elevation of privilege
Impact type	Authenticity, Integrity, Confidentiality, Availability and Authorization
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

 
Figure 7 11 : Illustration of the VM/Container hyperjacking attack

Threat ID	T-VL-02
Threat title	Boot tampering
Threat description	The bootloader of the virtualization layer (Host OS, Hypervisor, Container Engine) for VNF/CNF may be maliciously tampered by an attacker, e.g. the attacker compromises hypervisor or host OS to tamper the bootloader of guest OS (in case of VM) or Container.
In a O-Cloud environment any failure during the boot sequence can result in a number of situations that need to be handled by the NFO/FOCOM:
• failure of the physical machine to start at all
• physical machine entering a safe-mode
• physical machine continuing boot regardless of the integrity measurements
Threat type	Tampering
Impact type	Integrity
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

Threat ID	T-VL-03
Threat title	Attack internal network services
Threat description	In addition to attacking the network between containers, adversaries can also attack supporting services such as DNS service, which is only reachable from within the cluster network. The highly distributed nature of containers requires shared services for example for coordination and service discovery. An attacker can target these services to degrade services. For example, a denial-of-service against the service discovery infrastructure could prevent O-Cloud to react to changing resource requirements properly. Thus, O-Cloud may no longer be able to scale appropriately to sudden demand spikes [i.16].
Threat type	Denial of Service
Impact type	Availability
Affected Asset	Software components at runtime and their associated data

7.4.2.5	Threats concerning O-Cloud interfaces
7.4.2.5.1	O2 interface
Two main interfaces are defined in O-RAN WG6 specification and identified as critical assets of O-Cloud, i.e. interfaces O2 between O-Cloud and SMO. The threats on these interfaces are as follows.

Threat ID	T-O2-01
Threat title	MitM attacks on O2 interface between O-Cloud and SMO
Threat description	If the interface O2 interface is not protected, an attacker can attack all the requests/responses sent between the O-Cloud and the SMO (FOCOM and NFO). 
For example, the attacker can tamper/alter/disclose requests and services (See ‘Critical services’ in 2.3) sent over O2 between O-Cloud and SMO, hence the virtualized resource or relevant status information is not as requested. This affects the normal operation of the O-Cloud, and even causes DoS attacks, information leakage.
An attacker can tamper the specific assignment of virtualized resources to cause resource assignment errors or an attacker can intercept virtualized resources state information leading to information disclosure.
An attacker can compromise IMS to tamper with the hardware state information (e.g. deleting hardware alarm information) to affect the hardware's operation or to result in information disclosure (e.g. an attacker can get the hardware configuration from the compromised IMS. Then, the attacker can attack the hardware according to the configuration such as CPU type, memory size etc.). An attacker can also tamper or intercept the hardware resource configuration and state information if the configuration and state information are transmitted using an insecure protocol on the O2 interface.
Threat type	Tampering, Information disclosure, Denial of Service
Impact type	Integrity, Confidentiality, Availability
Affected Asset	Telemetry, provisioning, logs, software management, performance information

7.4.2.5.2	O-Cloud API

Threat ID	T-OCAPI-01
Threat title	MitM attacks on O-Cloud interface between VNFs/CNFs and the virtualization layer
Threat description	An attacker can attack an instantiated VNF/CNF through a compromised virtualization layer. For example, cryptographic keys or other security critical data of an instantiated VNF/CNF could be stolen by an attacker with access to the virtualization layer, or the virtualized resource provided by the Virtualization layer to the instantiated VNF/CNF can be manipulated or the bootloader of Guest OS (in case of VM) or Container of an instantiated VNF/CNF can be tampered by an attacker via a compromised virtualization layer.
Threat type	Tampering, Information disclosure, Denial of Service
Impact type	Integrity, Confidentiality, Availability
Affected Asset	Host OS, Hypervisor/Container Engine and VNFs/CNFs (Near RT RIC, O-CU, O-DU)

7.4.2.6	Threats concerning hardware resources

Threat ID	T-HW-01
Threat title	Cross VM/Container side channel attacks
Threat description	In a typical cross-VM/Container side channel attack scenario, an adversary places a malicious VM/Container co-resident to the target VM/Container so that they share the same hardware resources. Then, the attacker extracts useful information such as cryptographic keys from the target VM/Container to use them for traffic eavesdropping and man-in-the-middle attacks. Through the side channel attack, an attacker sharing the same cache as the victim can monitor the cache access behavior of the victim. For example, the attacker is able to monitor cache timing information by measuring the execution of different operations on the victim’s VM/Container. Generally, the attacker exploits timings in the shared high-level cache memory. However, power consumption or electromagnetic leaks can also be used as a vector to launch side channel attacks.
In the virtual environment, prior to the cross-VM/Container side channel attack, the attacker needs to identify the target VM/Container’s location and place a malicious VM/Container co-resident with the target. Later, that attacker may use the maliciously placed VM/Container to extract information from the target VM/Container with the side channel attack.
Hardware vulnerabilities in processors can also have a large impact on O-Cloud security. Flaws in chip design can result in the compromise of tenant information in the cloud through side-channel attacks [i.24].
Threat type	Tampering, Information disclosure, Denial of Service
Impact type	Integrity, Confidentiality, Availability
Affected Asset	Sensitive data (e.g. passwords, private keys, subscription data, logs), VNFs/CNFs (Near RT RIC, O-CU, O-DU) related data

 
Figure 7 12 : Illustration of a cross VM/Container side channel attack

Threat ID	T-HW-02
Threat title	MitM attacks on the interface between virtualization layer and hardware
Threat description	An attacker can utilize the vulnerabilities of hardware (e.g. Meltdown and Specter of CPU in host) to attack virtualization layer and/or VNFs/CNFs through this interface, resulting in tampering, information disclosure or DoS.
Threat type	Tampering, Information disclosure, Denial of Service
Impact type	Integrity, Confidentiality, Availability
Affected Asset	All assets

7.4.2.7	Threats concerning O-Cloud management (SMO, NFO, FOCOM)

Threat ID	T-ADMIN-01
Threat title	Denial of service against NFO/FOCOM
Threat description	A denial-of-service attack against the NFO/FOCOM can interfere with the ability of operators to control and maintain their deployments. This can lead to the inability to react to changing resource requirements. In addition, the NFO/FOCOM is the external API to interact with the O-Cloud platform. Thus, other services may become inaccessible as well. For example, operators may be unable to retrieve logs, telemetry data. An attacker could use this opportunity to hide additional attacks on VM/Container instances.
In addition, an attacker on the NFO/FOCOM could prevents the O-Cloud software update (VNFs/CNFs, VL) to exploit a known security flaw in the O-Cloud software.
Threat type	Denial of Service
Impact type	Availability
Affected Asset	VM/Container images, VNF/CNF, host OS, Hypervisor/Container Engine software

Threat ID	T-ADMIN-02
Threat title	Abuse a O-Cloud administration service
Threat description	Usually, the SMO including NFO/FOCOM is exposed to the tenant in a web front-end or REST API. In case these interfaces contain software vulnerabilities or implement authentication and authorization insufficiently, an adversary would be able to gain access to the VM/Container management and pose as a tenant. It is also possible that an adversary gains the ability to submit requests without prior authentication and authorization.
The NFO/FOCOM interfaces encompasses a great deal of privileges because anyone gaining sufficient access is able to deploy new instances and disrupt existing O-Cloud services. It may also be possible for an adversary to submit compromised VM/Container images that unsuspecting tenants then use to initiate O-Cloud services. Moreover, adversaries can use the same access to extract business data, configuration data, user data and possibly credentials. For example, they may be able to create backups of VM/Container instances or they can export VM/Container images. The impact of compromised credentials is exacerbated by the fact that weak and insufficient safeguarding of credentials is recognized as one of the top threats in cloud computing [38].
Container example: Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.
Container example: In Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as docker exec to execute a command within a running container. In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as kubectl exec.
Threat type	Tampering, Information disclosure, Denial of Service and Elevation of privilege
Impact type	Integrity, Confidentiality, Availability, Authorization
Affected Asset	VNF/CNF, host OS, Hypervisor/Container Engine software and related information

7.4.2.8	Threats concerning Acceleration Abstraction Layer (AAL)
Threat ID	T-AAL-01
Threat title	Attacker exploits insecure API to gain access to hardware accelerator resources
Threat description	Insecure AAL API allows an attacker to tamper the requests/responses sent between the AAL components, the O-Cloud platform and O-RAN APPs/VNFs/CNFs. 
For example, the attacker can tamper requests and services sent over AALI-C-Mgnt between IMS and the hardware accelerator manager, hence capability of the hardware accelerator device, fault information, logs, performance information and others are not as requested. This affects the normal operation of the O-Cloud, and even causes tampering.
An attacker can tamper application (e.g. O-DU) requests sent over AALI-C-App to an AAL implementation for allocation of buffers. This affects the normal operation of the applications, and even causes tampering.
An attacker can tamper application (e.g. O-DU) requests sent over AALI-P for configuring and managing the AAL-LPU(s). This affects the normal operation of the applications, and even causes tampering.
Threat type	Tampering
Impact type	Integrity
Affected Asset	Data in transit AALI-C-App & AALI-P interfaces, Data in transit vendor specific interface, AAL profiles, AAL-LPUs, Stored AAL data, AAL software, Device firmware

Threat ID	T-AAL-02
Threat title	Internal Overload DoS attack targeting AAL services
Threat description	Overload situation could appear in the case of DoS attack or increased traffic on AAL interfaces. Inability to mitigate traffic volumetric attacks on AAL affects availability of AAL data and services.
DoS attacks on the AALI-C interface affect the different services provided by the hardware accelerator manager and the transport abstraction framework.
DoS attacks on the AALI-P interface affect the configuration and management of AAL-LPU (Acceleration Abstraction Layer Logical Processing Unit) by an application (e.g. O-DU) in addition to acceleration functionality.
Threat type	Denial of Service
Impact type	Availability
Affected Asset	AAL profiles, AAL-LPUs, Stored AAL data, AAL software, Device firmware

Threat ID	T-AAL-03
Threat title	Fail to clear resources 
Threat description	Fail to clear accelerator resources after a process termination. This causes an information leakage and incorrect results for computations. Further, failure to release accelerator resources may prevent other processes from running.
This threat is relevant to accelerator resources either inside the hardware accelerator device (internal memories, registers, cache) or in the O-Cloud memories used by accelerators.
Threat type	Information disclosure, Denial of service
Impact type	Confidentiality, Availability
Affected Asset	AAL profiles, AAL-LPUs, Stored AAL data, AAL software, Device firmware

Threat ID	T-AAL-04
Threat title	HAM compromise
Threat description	A malicious actor can gain access to HAM to gain unauthorized access and control of the hardware accelerator device. This can result in the disruption of services (DoS) and tampering of accelerator components, such as firmware, drivers which can cause the accelerator to behave abnormally or crash altogether.
Threat type	Tampering, Denial of service
Impact type	Integrity, Availability
Affected Asset	Data in transit AALI-C-App & AALI-P interfaces, Data in transit vendor specific interface, AAL profiles, AAL-LPUs, Stored AAL data, AAL software, Device firmware

Threat ID	T-AAL-05
Threat title	Malicious memory accesses 
Threat description	AAL that allows one process running on the hardware accelerator device to access memory owned by another process running on the hardware accelerator device can leak information (impact on confidentiality).
Similarly, AAL allowing concurrently executing processes to write to one another’s memory may have correctness errors (impact on integrity).
If multiple processes are running concurrently and one is allowed to dominate accelerator resources, the other may suffer from degraded performance. For example, if one process can evict all cache entries belonging to the other, the victim will suffer performance penalties (impact on availability).
Threat type	Information disclosure, Tampering, Denial of service
Impact type	Confidentiality, Integrity, Availability
Affected Asset	AAL profiles, AAL-LPUs, Stored AAL data, AAL software, Device firmware

Threat ID	T-AAL-06
Threat title	Firmware attacks 
Threat description	Hardware accelerators often have their own firmware, which can be targeted by attackers. This could include modifying the firmware to introduce vulnerabilities (e.g., malware) or installing a malicious firmware to extract/modify sensitive information or execute unauthorized actions (e.g., control the device remotely). 
Threat type	Information disclosure, Tampering
Impact type	Confidentiality, Integrity
Affected Asset	AAL profiles, AAL-LPUs, Stored AAL data, AAL software, Device firmware

7.4.2.9	Threats concerning O-Cloud instance ID
Threat ID	T-O-CLOUD-ID-01
Threat title	ID reuse in O-Cloud's object lifecycle
Threat description	In O-Cloud, objects such as Containers, Pods, Nodes, and Services are identified by their IDs within a given compute pool (e.g., cluster in Kubernetes). When an object is deleted, its ID becomes available for reuse. This means that a new object can be created with the same ID as a previously deleted object. If an object gets deleted but all its associated data isn't properly isolated or cleaned, the ID, if reused, could lead to unintended data associations or leaks.
Potential consequences:
•	Data Residue: A new object, reusing an ID, may inherit residual data or configurations from its predecessor, leading to potential misconfigurations and incorrect data associations. This can result in sensitive data exposure.
•	Data Overwrite: Automated processes unaware of the deletion and subsequent recreation might mistakenly write or read data from the new object, thinking it's the old one.
•	Monitoring Ambiguities: Monitoring tools might combine metrics from the old and new objects, resulting in confusing data.
•	Operational Disruptions: The new object might operate based on the residual configurations of the old object, potentially leading to system inefficiencies or failures.
Threat type	Tampering, Information disclosure
Impact type	Integrity, Confidentiality
Affected Asset	O-Cloud Provisioning information, Software components at runtime and their associated data, Security event logs


Threat ID	T-O-CLOUD-ID-02
Threat title	Node redundancy in O-Cloud deployments
Threat description	Nodes in O-Cloud often represent physical or virtual machines. If a machine fails and is replaced without deleting its corresponding Node object, and the new machine is given the same ID or the hostname, O-Cloud might treat the new machine as if it were the original.
Potential consequences:
•	Resource Mismatch: The new host might have different resources (CPU, memory, storage) than the old one, leading to scheduling issues or resource constraints.
•	Stale Data: The new node might inherit data or configurations from the old node, leading to potential security or operational risks.
•	Network Issues: Network configurations or IP address assignments might be inconsistent or conflicting.
Threat type	Spoofing, Tampering, Information disclosure, Denial of Service
Impact type	Authenticity, Integrity, Confidentiality, Availability
Affected Asset	O-Cloud Provisioning information, Software components at runtime and their associated data, Security event logs


Threat ID	T-O-CLOUD-ID-03
Threat title	O-Cloud ID mismanagement
Threat description	IDs are crucial for uniquely identifying objects within the O-Cloud. Mismanagement occurs when these IDs are not properly assigned, tracked, or validated, leading to potential overlaps or inconsistencies.
Potential consequences:
•	ID Collision: Due to system glitches or bugs, two distinct objects could inadvertently be allocated the same ID. Such an occurrence is termed an ID collision. This can result in operations meant for one object inadvertently affecting the other.
•	Resource Overwrite: If two objects share the same ID, updates or modifications intended for one might overwrite the data of the other, leading to data inconsistencies or loss.
•	ID-Based Permissions: Many security protocols and access controls in O-Cloud can be tied to object IDs. If an attacker can predict, guess, or manipulate the ID generation process, they might gain unauthorized access to resources.
•	Log Merging: Monitoring tools and logging systems use IDs to track events and operations related to specific objects. If two objects share an ID, their logs might get merged, making it challenging to trace events back to their source.
•	RBAC Anomalies: Role-Based Access Control (RBAC) regulations attached to specific object IDs could unintentionally approve or restrict access to the novel object due to misidentification.
Threat type	Spoofing, Tampering, Information Disclosure, Repudiation, Elevation of Privilege, Denial of Service
Impact type	Authenticity, Integrity, Non-repudiability, Confidentiality, Availability, Authorization
Affected Asset	O-Cloud Provisioning information, Software components at runtime and their associated data, Security event logs


7.4.2.10	Threats concerning time synchronization
Threat ID	T-TS-01
Threat title	Time synchronization disruption in O-Cloud
Threat description	Disruption or manipulation of the time synchronization process within the O-Cloud can lead to severe security and operational issues. An attacker may target the time synchronization mechanisms to alter time settings across O-Cloud nodes, leading to:
•	Impersonation of time synchronization server: An attacker may impersonate a legitimate time synchronization server, tricking nodes into accepting incorrect time data. This can cause nodes to synchronize with a malicious time source, leading to widespread time discrepancies.
•	Data integrity loss: Inconsistent timestamps can corrupt logs and audit trails within the O-Cloud, making it difficult to trace and analyze security events accurately.
•	Operational disruption: Time-sensitive operations within the O-Cloud may be disrupted, leading to data loss and service outages.
•	Authentication and authorization bypass: Many security mechanisms in the O-Cloud rely on accurate time. Disrupted time synchronization can undermine token expiration, certificate validity, and other time-based access controls, potentially allowing unauthorized access to O-Cloud resources.
EXAMPLE: Time-sensitive operations such as automated backups, scheduled tasks (e.g., resource scaling, patch management), and certificate renewals.
NOTE: This threat is linked to the operation of CronJob resources as described in clause 4.3.1.1.6 of the O-RAN specification [i.34]. Any disruption or manipulation of the time synchronization process can severely impact scheduled operations managed by CronJobs within the O-Cloud.
Threat type	Spoofing, Tampering, Denial of Service and Elevation of privilege
Vulnerabilities	Insecure time synchronization protocols
Insufficient authentication mechanisms and access controls for the time synchronization settings
Misconfiguration of time synchronization settings on O-Cloud nodes
Impact type	Authenticity, Integrity, Availability and Authorization
Affected Asset	Log and audit trails
O-Cloud time synchronization settings